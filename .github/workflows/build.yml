on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: checkout satysfi
      uses: actions/checkout@v3
      with:
        repository: gfngfn/SATySFi
        path: satysfi

    - name: checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        path: repo
    
    - name: load last VERSION id into environment variable 
      run: test -f "VERSION" && export ID=$(cat VERSION) && echo "LAST_COMMIT_ID=${ID}" >> $GITHUB_ENV || echo "first build"
      working-directory: repo

    - name: load current VERSION id into environment variable
      run: export ID=$(git rev-parse HEAD) && echo "HEAD_COMMIT_ID=${ID}" >> $GITHUB_ENV
      working-directory: satysfi

    - name: check require update
      run: | 
        if [ -z "$LAST_COMMIT_ID" ] || ( \                                      # last commit id is not exists
          [ "$LAST_COMMIT_ID" != "$HEAD_COMMIT_ID" ] && \                       # or last commit id is not equal to head commit id
          git diff $LAST_COMMIT_ID $HEAD_COMMIT_ID --exit-code --quiet -- doc \ # and there is difference between last commit and head commit
        ); then
          export REQUIRE_UPDATE=true
        else 
          export REQUIRE_UPDATE=false
        fi
        echo "REQUIRE_UPDATE=$REQUIRE_UPDATE"
        echo "REQUIRE_UPDATE=$REQUIRE_UPDATE" >> $GITHUB_ENV
      working-directory: satysfi

    - name: update VERSION
      if: ${{ env.REQUIRE_UPDATE }}
      run: echo "$HEAD_COMMIT_ID" > VERSION
      working-directory: repo

    - name: build docs
      if: ${{ env.REQUIRE_UPDATE }}
      run: |
        docker run --workdir /satysfi/doc \
                   --mount type=bind,consistency=cached,src=$(pwd)/satysfi,dst=/satysfi \
                   ghcr.io/maemon4095/satysfi:latest "satyrographos install && make"
    
    - name: commit docs
      if: ${{ env.REQUIRE_UPDATE }}
      run: |
        mv ../satysfi/doc/*.pdf .
        git config user.name github-actions
        git config user.email ${{ github.actor }}@users.noreply.github.com
        git add .
        git commit -m "build"
        git push
      working-directory: repo
      
    